name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - linux
          - windows
          - macos
          - macos-arm-64
        include:
          - build: linux
            os: ubuntu-latest
            toolchain: stable
            target: x86_64-unknown-linux-musl
            binary_postfix: ""

          - build: windows
            os: windows-latest
            toolchain: stable
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"

          - build: macos
            os: macos-latest
            toolchain: stable
            target: x86_64-apple-darwin
            binary_postfix: ""

          - build: macos-arm-64
            os: macos-11
            toolchain: nightly
            target: aarch64-apple-darwin
            binary_postfix: ""

    steps:
      - name: install musl-tools if musl target
        if: ${{ contains(matrix.target, 'musl') }}
        run: sudo apt install musl-tools

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Download cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ matrix.target }}-build-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-build-
            ${{ matrix.target }}-

      - name: Generate tree-sitter-vcl
        working-directory: ./vendor/tree-sitter-vcl
        run: |
          npm ci
          npx tree-sitter generate

      - name: Generate tree-sitter-vtc
        working-directory: ./vendor/tree-sitter-vtc
        run: |
          npm ci
          npx tree-sitter generate

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          BINARY_NAME=varnishls${{ matrix.binary_postfix }}
          RELEASE_NAME=varnishls-${{ matrix.target }}${{ matrix.binary_postfix }}
          strip $BINARY_NAME
          cp $BINARY_NAME $RELEASE_NAME
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME > $RELEASE_NAME.sha256
          fi

      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/varnishls-${{ matrix.target }}${{ matrix.binary_postfix }}
            target/${{ matrix.target }}/release/varnishls-${{ matrix.target }}${{ matrix.binary_postfix }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
